Metadata-Version: 2.4
Name: cryptobot
Version: 0.1.0
Summary: Modular crypto algo-trading bot (backtest, paper, live).
Author: You
Requires-Python: >=3.10
Description-Content-Type: text/markdown
Requires-Dist: ccxt>=4.3.0
Requires-Dist: pandas>=2.2.2
Requires-Dist: numpy>=2.1.0
Requires-Dist: pydantic>=2.8.2
Requires-Dist: python-dotenv>=1.0.1
Requires-Dist: loguru>=0.7.2
Requires-Dist: aiohttp>=3.10.5
Provides-Extra: dev
Requires-Dist: pytest>=8.3.2; extra == "dev"
Requires-Dist: pytest-asyncio>=0.24.0; extra == "dev"
Requires-Dist: ruff>=0.6.5; extra == "dev"
Requires-Dist: mypy>=1.11.2; extra == "dev"

# Crypto Bot

[![CI](https://github.com/m11nic89co/santino.test/actions/workflows/cryptobot-ci.yml/badge.svg?branch=crypto-bot)](https://github.com/m11nic89co/santino.test/actions/workflows/cryptobot-ci.yml)

Модульный бот для алгоритмической торговли криптовалютой.

Возможности:

- Бэктестинг на исторических данных
- Paper-trading (без реальных сделок)
- Live-трейдинг через CCXT
- Модульные стратегии и риск-менеджмент
- Конфигурация через .env и/или config.json

## Структура

- src/cryptobot/engine — ядро бота (циклы, оркестрация)
- src/cryptobot/exchanges — обёртки над биржами (CCXT)
- src/cryptobot/strategies — стратегии (пример: Crossover)
- src/cryptobot/utils — утилиты (IO, таймсерии, риск)
- tests — тесты

## Быстрый старт

1. Установите зависимости:

```bash
python -m venv .venv
. .venv/bin/activate  # Windows: .venv\\Scripts\\activate
pip install -e .[dev]
```

2. Создайте .env по образцу:

```bash
cp .env.example .env
```

3. Запустите бэктест примера:

```bash
python -m cryptobot.engine.run_backtest --pair BTC/USDT --tf 1h --strategy crossover
```

4. Paper-trading (требует API только для чтения/демо-среду):

```bash
python -m cryptobot.engine.run_paper --pair BTC/USDT --tf 1m --strategy crossover
```

## Важно

- Торговля связана с риском. Используйте paper/демо перед live.
- Храните ключи API только локально и в .env (не коммить).
